<script src="//d3js.org/d3.v3.min.js"></script>



<p>Instructions, reflect below, etc.</p>
<p><%= @assignment.instruction %></p>





<form action="" method="post">
  <textarea name="text" style="width: 100%; height: 300px;"></textarea>
  <input type="submit" class="btn btn-primary" value="Submit" />
</form>



emotion_library = {"excited" => "green","proud" => "green","joyful" => "green","hopeful" => "green","friendly" => "green","energetic" => "green","rewarded" => "green","worthy" => "green","motivated" => "green","grateful" => "green","comfortable" => "green","belonging" => "green","curious" => "green","confident" => "green","loved" => "green","eager" => "green","creative" => "green","cheerful" => "green","relaxed" => "green","throughtful" => "green","engaged" => "green","creative" => "green","playful" => "green","aware" => "green","interested" => "green","cooperative" => "green","talkative" => "green","kind" => "green","polite" => "green","silly" => "green","safe" => "green","calm" => "green","content" => "green","angry" => "red","irritated" => "red","frustrated" => "red","annoyed" => "red","hateful" => "red","aggressive" => "red","jealous" => "red", "sad" => "blue","vulnerable" => "blue","isolated" => "blue","lonely" => "blue","isolated" => "blue","lost" => "blue","grieving" => "blue","hopeless" => "blue","disappointed" => "blue","hungry" => "blue","sleepy" => "blue","bored" => "blue","apathetic" => "blue","inadequate" => "blue","distracted" => "blue","sensitive" => "blue","guilty" => "blue","upset" => "blue","withdrawn" => "blue","unsafe" => "blue", "anxious" => "yellow","stressed" => "yellow","apprehensive" => "yellow","overwhelmed" => "yellow","worried" => "yellow","frustrated" => "yellow","skeptical" => "yellow","shy" => "yellow","afraid" => "yellow","antsy" => "yellow","confused" => "yellow","quiet" => "yellow","okay" => "yellow","good" => "yellow","fine" => "yellow"}



<script>

  var diameter = 960,
      format = d3.format(",d"),
      color = d3.scale.category20c();

  var bubble = d3.layout.pack()
      .sort(null)
      .size([diameter, diameter])
      .padding(1.5);

  var svg = d3.select("body").append("svg")
      .attr("width", diameter)
      .attr("height", diameter)
      .attr("class", "bubble");

  d3.json("flare.json", function(error, root) {
    if (error) throw error;

    var node = svg.selectAll(".node")
        .data(bubble.nodes(classes(root))
            .filter(function(d) { return !d.children; }))
        .enter().append("g")
        .attr("class", "node")
        .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

    node.append("title")
        .text(function(d) { return d.className + ": " + format(d.value); });

    node.append("circle")
        .attr("r", function(d) { return d.r; })
        .style("fill", function(d) { return color(d.packageName); });

    node.append("text")
        .attr("dy", ".3em")
        .style("text-anchor", "middle")
        .text(function(d) { return d.className.substring(0, d.r / 3); });
  });

  // Returns a flattened hierarchy containing all leaf nodes under the root.
  function classes(root) {
    var classes = [];

    function recurse(name, node) {
      if (node.children) node.children.forEach(function(child) { recurse(node.name, child); });
      else classes.push({packageName: name, className: node.name, value: node.size});
    }

    recurse(null, root);
    return {children: classes};
  }

  d3.select(self.frameElement).style("height", diameter + "px");

</script>
